env:
  RUBY_VERSION: 3.0.0
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: postgres
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/app_test
  RAILS_ENV: test

name: SMS360 v.2 CI
on: [push,pull_request]
jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Rubocop
        run: gem install rubocop
      - name: Install bundler
        run: |
          gem install bundler
          bundler install
      - name: Check code
        run: bundle exec rubocop --parallel
  rspec-test:
    name: RSpec
    needs: rubocop-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install postgres client
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          gem install bundler
          bundler install
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 15.0.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Create database
        run: |
          RAILS_ENV=test bundler exec rails db:create
          RAILS_ENV=test bundler exec rails db:migrate
      - name: Compile assets
        run: |
          RAILS_ENV=test bundle exec rails webpacker:compile
      - name: Run tests
        run: bundler exec rake
#      - name: Run security checks
#        run: |
#          bin/bundler-audit --update
#          bin/brakeman -q -w2
